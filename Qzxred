-- Define a table to store whitelisted HWIDs
-- 1=qzxred
-- 2=
-- 3=
-- 4=
local whitelist = {
    ["1fbc2289-1f18-48c4-9b51-4a6001c8bbfe"] = true,
    [""] = true,
    [""] = true,
    [""] = true,
    [""] = true,
    [""] = true,
    [""] = true,
    -- Add more trusted HWIDs as needed
}

-- Function to check if a HWID is whitelisted
local function isWhitelisted(hwid)
    return whitelist[hwid] or false
end

-- Function to handle access denial
local function handleAccessDenied(hwid)
    print("Access denied for HWID:", hwid)
    -- You can implement further actions here, such as logging or notifications
end

-- Main function to process HWID
local function processHWID(hwid)
    if isWhitelisted(hwid) then
        print("Access granted for HWID:", hwid)
        -- Your application logic for granting access goes here
    else
        handleAccessDenied(hwid)
    end
end

local gui = Instance.new("ScreenGui")
gui.Name = "CustomGUI"
gui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 455, 0, 280)
mainFrame.Position = UDim2.new(0.5, -227, 0.5, -140)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.Parent = gui

local mainFrameStroke = Instance.new("UIStroke")
mainFrameStroke.Color = Color3.fromRGB(255, 0, 0)
mainFrameStroke.Parent = mainFrame

local mainFrameCorner = Instance.new("UICorner")
mainFrameCorner.CornerRadius = UDim.new(0, 8)
mainFrameCorner.Parent = mainFrame

-- Topbar
local topbar = Instance.new("Frame")
topbar.Size = UDim2.new(0, 455, 0, 20)
topbar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
topbar.Parent = mainFrame

local topbarStroke = Instance.new("UIStroke")
topbarStroke.Color = Color3.fromRGB(255, 0, 0)
topbarStroke.Parent = topbar

local topbarCorner = Instance.new("UICorner")
topbarCorner.CornerRadius = UDim.new(0, 8)
topbarCorner.Parent = topbar

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 1, 0)
title.Text = "vamp.gg"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.Font = Enum.Font.Sarpanch
title.TextSize = 14
title.Parent = topbar

-- Tabs
local tabs = {"Legit", "Rage", "misc"}
local tabFrames = {}

for i, tabName in ipairs(tabs) do
    local tabButton = Instance.new("TextButton")
    tabButton.Size = UDim2.new(0, 150, 0, 20)
    tabButton.Position = UDim2.new(0, (i-1)*150, 0, 20)
    tabButton.Text = tabName
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    tabButton.Font = Enum.Font.Sarpanch
    tabButton.TextSize = 14
    tabButton.Parent = mainFrame

    local tabButtonCorner = Instance.new("UICorner")
    tabButtonCorner.CornerRadius = UDim.new(0, 8)
    tabButtonCorner.Parent = tabButton

    local tabFrame = Instance.new("ScrollingFrame")
    tabFrame.Size = UDim2.new(1, 0, 1, -40)
    tabFrame.Position = UDim2.new(0, 0, 0, 40)
    tabFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    tabFrame.Visible = i == 1
    tabFrame.CanvasSize = UDim2.new(0, 0, 2, 0) -- Adjust based on content
    tabFrame.ScrollBarThickness = 6
    tabFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 0, 0)
    tabFrame.Parent = mainFrame

    local tabFrameCorner = Instance.new("UICorner")
    tabFrameCorner.CornerRadius = UDim.new(0, 8)
    tabFrameCorner.Parent = tabFrame

    tabFrames[tabName] = tabFrame

    tabButton.MouseButton1Click:Connect(function()
        for _, frame in pairs(tabFrames) do
            frame.Visible = false
        end
        tabFrame.Visible = true
    end)
end

-- Button Function
local function createButton(parent, text, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 100, 0, 25)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.Font = Enum.Font.Sarpanch
    button.TextSize = 14
    button.Parent = parent

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 8)
    buttonCorner.Parent = button

    button.MouseButton1Click:Connect(callback)
end

-- Adding Buttons to Each Tab
local buttonTexts = {"69", "Button 2", "Button 3"}
local buttonTexts = {"88", "", "",}
for _, tabName in ipairs(tabs) do
    local tabFrame = tabFrames[tabName]
    for i, text in ipairs(buttonTexts) do
        createButton(tabFrame, text, function()
            print(tabName .. " - " .. text .. " clicked")
        end).Position = UDim2.new(0, 10, 0, 10 + (i-1) * 35)
    end
end

-- Draggable Functionality
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

topbar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

topbar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
